                                           README
The trends of likelihood of training data and development data graph is attached as "analysis.png".
I did four different experiments by changing the number of specified clusters and record the results. The plot shows the relationship between the likelihood of training data and development data and the number of iterations. 

In the first experiment, with the number of cluster equals to 2, I run the EM algorithm for Mixture of Gaussian by 25 iterations. As we know, EM algorithm will always make progress from step to step, so the likelihood of training data should go up along with the number of iterations increasing. As shown in the plot, the training likelihood and dev likelihood increase fast during iteration 1 to 15. After the 15th iteration, the likelihood of training data and dev data become steady and keep still even the number of iterations goes up to 25. This means that the model does a good job in both training data and dev data, because firstly, the likelihood of training data does not increase, which means the model fits the training data very well. On the other hand, the likelihood of dev data does not go down and still keep steady, which means the model does not suffer from overfitting. 

The 2nd and 3rd experiments shows something different. From the graph, we can see that the likelihood of training data is similar to the 1st graph, however, the likelihood of dev data is different. Specifically, it goes up first and gradually goes down. In the 2nd experiment, the likelihood of dev data starts going down after 10th iteration, and 15th iteration in 3rd graph, which means the model is overfitting because it fits more and more noise in the training data and can't make a good prediction on the future data. 

The 4th experiment is doing under condition of cluster equals to 5. The likelihood of training data is always increasing. The difference compared to previous experiments is that the likelihood of dev data is also increasing, which means the model is under-fitting. The likelihood of dev data should keep going up during some more iterations. 